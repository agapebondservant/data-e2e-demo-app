#@ load("@ytt:data", "data")
---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: fraud-detection-amqp
spec:
  dependencies:
    - name: main-dep
      eventSourceName: amqp
      eventName: fraud-detection
  triggers:
    - template:
        name: amqp-workflow-trigger
        argoWorkflow:
          operation: submit
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                name: random-forest-deploy-inference-workflow
                annotations:
                  kapp.k14s.io/versioned: ""
                  kapp.k14s.io/nonce: ""
                  kapp.k14s.io/disable-wait: ""
              spec:
                entrypoint: train
                templates:
                  - name: train
                    steps:
                      - - name: deploy-inference
                          template: deploy-inference-db

                  - name: deploy-inference-db
                    inputs:
                      artifacts:
                        - name: deploy-code-db
                          path: "{{inputs.parameters.script_shared_path}}"
                          git:
                            repo: #@ data.values.git_repo
                            singleBranch: true
                            branch: #@ data.values.environment_name
                      parameters:
                        - name: user
                          value: #@ data.values.inference_user
                        - name: db_uri
                          value: #@ data.values.inference_db_uri
                        - name: shared_path
                          value: #@ data.values.inference_shared_path
                        - name: external_secret_ref
                          value: #@ data.values.inference_external_secret_ref
                        - name: external_secret_ref_key
                          value: #@ data.values.inference_external_secret_ref_key
                        - name: git_repo
                          value: #@ data.values.git_repo
                        - name: environment_name
                          value: #@ data.values.environment_name
                        - name: script_shared_path
                          value: #@ data.values.script_shared_path
                        - name: source_user
                          value: #@ data.values.training_user
                        - name: source_db_uri
                          value: #@ data.values.training_db_uri
                        - name: source_external_secret_ref
                          value: #@ data.values.training_external_secret_ref
                        - name: source_external_secret_ref_key
                          value: #@ data.values.training_external_secret_ref_key
                        - name: db_script
                          values: #@ data.values.inference_db_script
                        - name: db_schema
                          values: #@ data.values.inference_db_schema
                        - name: shell_script
                          value: #@ data.values.inference_db_shell_script
                    script:
                      image: liquibase/liquibase
                      env:
                        - name: HOST_PASSWORD
                          valueFrom:
                            secretKeyRef:
                              name: "{{inputs.parameters.external_secret_ref}}"
                              key: "{{inputs.parameters.external_secret_ref_key}}"
                        - name: SOURCE_HOST_PASSWORD
                          valueFrom:
                            secretKeyRef:
                              name: "{{inputs.parameters.source_external_secret_ref}}"
                              key: "{{inputs.parameters.source_external_secret_ref_key}}"
                      command: [ bash ]
                      source: |
                        DB_SCHEMA="{{inputs.parameters.db_schema}}" \
                        SHARED_PATH="{{inputs.parameters.script_shared_path}}" \
                        DB_SCRIPT="{{inputs.parameters.db_script}}" \
                        "{{inputs.parameters.script_shared_path}}"/"{{inputs.parameters.shell_script}}";

                        liquibase update \
                        --changelog-file="{{inputs.parameters.script_shared_path}}"/"{{inputs.parameters.db_script}}" \
                        --url="{{inputs.parameters.db_uri}}" \
                        --username="{{inputs.parameters.user}}" \
                        --password="${HOST_PASSWORD}";

                        liquibase generateChangeLog \
                        --changeLogFile="sample.sql" \
                        --url="{{inputs.parameters.source_db_uri}}" \
                        --username="{{inputs.parameters.source_user}}" --password="${SOURCE_HOST_PASSWORD}" --diff-types="data" \
                        --overwrite-output-file=true \
                        --include-objects="rf_credit_card_transactions_importances, rf_credit_card_transactions_inference_results, rf_credit_card_transactions_model, rf_credit_card_transactions_model_group, rf_credit_card_transactions_model_summary, rf_model_versions";

                        liquibase execute-sql \
                        --url="{{inputs.parameters.db_uri}}" \
                        --username="{{inputs.parameters.user}}" --password="${HOST_PASSWORD}" \
                        --sql="TRUNCATE TABLE rf_credit_card_transactions_importances; TRUNCATE TABLE rf_credit_card_transactions_inference_results; TRUNCATE TABLE rf_credit_card_transactions_model; TRUNCATE TABLE rf_credit_card_transactions_model_group; TRUNCATE TABLE rf_credit_card_transactions_model_summary;";

                        liquibase update \
                        --changelog-file="sample.sql" \
                        --url="{{inputs.parameters.db_uri}}" \
                        --username="{{inputs.parameters.user}}" \
                        --password="${HOST_PASSWORD}";

                        liquibase changeLogSync \
                        --changelog-file="sample.sql" \
                        --url="{{inputs.parameters.db_uri}}" \
                        --username="{{inputs.parameters.user}}" \
                        --password="${HOST_PASSWORD}";