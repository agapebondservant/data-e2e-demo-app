#@ load("@ytt:data", "data")
---
apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: random-forest-train-workflow
spec:
  schedule: "*/1 * * * *"
  concurrencyPolicy: "Replace"
  startingDeadlineSeconds: 0
  workflowSpec:
    entrypoint: train
    templates:
      - name: train
        steps:
          - - name: run-training
              template: deploy-training-db
          - - name: deploy-inference
              template: deploy-inference-db
          - - name: publish-model
              template: run-training
              arguments:
                parameters:
                  - name: entrypoint
                    value: "./app/publish_randomforest_model.py"


      - name: deploy-training-db
        inputs:
          artifacts:
            - name: deploy-code-db
              path: "{{inputs.parameters.script_shared_path}}"
              git:
                repo: #@ data.values.git_repo
                singleBranch: true
                branch: #@ data.values.environment_name
          parameters:
            - name: user
              value: #@ data.values.training_user
            - name: db_uri
              value: #@ data.values.training_db_uri
            - name: shared_path
              value: #@ data.values.training_shared_path
            - name: external_secret_ref
              value: #@ data.values.training_external_secret_ref
            - name: external_secret_ref_key
              value: #@ data.values.training_external_secret_ref_key
            - name: git_repo
              value: #@ data.values.git_repo
            - name: environment_name
              value: #@ data.values.environment_name
            - name: script_shared_path
              value: #@ data.values.script_shared_path
        script:
          image: liquibase/liquibase
          mirrorVolumeMounts: true
          env:
            - name: HOST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{inputs.parameters.external_secret_ref}}"
                  key: "{{inputs.parameters.external_secret_ref_key}}"
          command: [bash]
          source: |
            liquibase execute-sql \
            --url="{{inputs.parameters.db_uri}}" \
            --username="{{inputs.parameters.user}}" --password="${HOST_PASSWORD}" \
            --sql="select run_random_forest_training()";

      - name: deploy-inference-db
        inputs:
          artifacts:
            - name: deploy-code-db
              path: "{{inputs.parameters.script_shared_path}}"
              git:
                repo: #@ data.values.git_repo
                singleBranch: true
                branch: #@ data.values.environment_name
          parameters:
            - name: user
              value: #@ data.values.inference_user
            - name: db_uri
              value: #@ data.values.inference_db_uri
            - name: shared_path
              value: #@ data.values.inference_shared_path
            - name: external_secret_ref
              value: #@ data.values.inference_external_secret_ref
            - name: external_secret_ref_key
              value: #@ data.values.inference_external_secret_ref_key
            - name: git_repo
              value: #@ data.values.git_repo
            - name: environment_name
              value: #@ data.values.environment_name
            - name: script_shared_path
              value: #@ data.values.script_shared_path
            - name: source_user
              value: #@ data.values.training_user
            - name: source_db_uri
              value: #@ data.values.training_db_uri
            - name: source_external_secret_ref
              value: #@ data.values.training_external_secret_ref
            - name: source_external_secret_ref_key
              value: #@ data.values.training_external_secret_ref_key
        script:
          image: liquibase/liquibase
          mirrorVolumeMounts: true
          env:
            - name: HOST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{inputs.parameters.external_secret_ref}}"
                  key: "{{inputs.parameters.external_secret_ref_key}}"
            - name: SOURCE_HOST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{inputs.parameters.source_external_secret_ref}}"
                  key: "{{inputs.parameters.source_external_secret_ref_key}}"
          command: [bash]
          source: |
            liquibase generateChangeLog \
            --changeLogFile="sample.sql" \
            --url="{{inputs.parameters.source_db_uri}}" \
            --username="{{inputs.parameters.source_user}}" --password="${SOURCE_HOST_PASSWORD}" --diff-types="data" \
            --overwrite-output-file=true \
            --include-objects="rf_credit_card_transactions_importances, rf_credit_card_transactions_inference_results, rf_credit_card_transactions_model, rf_credit_card_transactions_model_group, rf_credit_card_transactions_model_summary, rf_model_versions";

            liquibase execute-sql \
            --url="{{inputs.parameters.db_uri}}" \
            --username="{{inputs.parameters.user}}" --password="${HOST_PASSWORD}" \
            --sql="TRUNCATE TABLE rf_credit_card_transactions_importances; TRUNCATE TABLE rf_credit_card_transactions_inference_results; TRUNCATE TABLE rf_credit_card_transactions_model; TRUNCATE TABLE rf_credit_card_transactions_model_group; TRUNCATE TABLE rf_credit_card_transactions_model_summary;";

            liquibase update \
            --changelog-file="sample.sql" \
            --url="{{inputs.parameters.db_uri}}" \
            --username="{{inputs.parameters.user}}" \
            --password="${HOST_PASSWORD}";

            liquibase changeLogSync \
            --changelog-file="sample.sql" \
            --url="{{inputs.parameters.db_uri}}" \
            --username="{{inputs.parameters.user}}" \
            --password="${HOST_PASSWORD}";


      - name: run-training
        inputs:
          parameters:
            - name: entrypoint
            - name: model_name
              value: 'model'
        container:
          image: oawofolu/demo-ml-base
          command: [ python ]
          args:
            - "{{inputs.parameters.entrypoint}}"

