#@ load("@ytt:data", "data")
---
apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: random-forest-train-workflow
  annotations:
    kapp.k14s.io/versioned: ""
    kapp.k14s.io/nonce: ""
    kapp.k14s.io/disable-wait: ""
spec:
  schedule: "*/1 * * * *"
  concurrencyPolicy: "Forbid"
  startingDeadlineSeconds: 0
  workflowSpec:
    securityContext:
      runAsUser: 1000
      fsGroup: 1000
    entrypoint: train
    templates:
      - name: train
        steps:
          - - name: run-training
              template: deploy-training-db
          - - name: publish-model
              template: run-training
              arguments:
                parameters:
                  - name: entrypoint
                    value: "./app/publish_randomforest_model.py"


      - name: deploy-training-db
        inputs:
          artifacts:
            - name: deploy-code-db
              path: "{{inputs.parameters.script_shared_path}}"
              git:
                repo: #@ data.values.git_repo
                singleBranch: true
                branch: #@ data.values.environment_name
          parameters:
            - name: user
              value: #@ data.values.training_user
            - name: db_uri
              value: #@ data.values.training_db_uri
            - name: shared_path
              value: #@ data.values.training_shared_path
            - name: external_secret_ref
              value: #@ data.values.training_external_secret_ref
            - name: external_secret_ref_key
              value: #@ data.values.training_external_secret_ref_key
            - name: git_repo
              value: #@ data.values.git_repo
            - name: environment_name
              value: #@ data.values.environment_name
            - name: script_shared_path
              value: #@ data.values.script_shared_path
            - name: db_script
              value: #@ data.values.training_db_script
            - name: db_schema
              value: #@ data.values.training_db_schema
            - name: shell_script
              value: #@ data.values.training_db_shell_script

        script:
          image: liquibase/liquibase
          mirrorVolumeMounts: true
          env:
            - name: HOST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{inputs.parameters.external_secret_ref}}"
                  key: "{{inputs.parameters.external_secret_ref_key}}"
          command: [bash]
          source: |
            DB_SCHEMA="{{inputs.parameters.db_schema}}" \
            SHARED_PATH="{{inputs.parameters.script_shared_path}}" \
            DB_SCRIPT="{{inputs.parameters.db_script}}" \
            "{{inputs.parameters.script_shared_path}}"/"{{inputs.parameters.shell_script}}";

            liquibase update \
            --changelog-file=changelog/"{{inputs.parameters.db_script}}" \
            --url="{{inputs.parameters.db_uri}}" \
            --username="{{inputs.parameters.user}}" \
            --password="${HOST_PASSWORD}";

            liquibase executeSql \
            --url="{{inputs.parameters.db_uri}}" \
            --username="{{inputs.parameters.user}}" --password="${HOST_PASSWORD}" \
            --sql="SELECT run_random_forest_training()";

            liquibase releaseLocks \
            --url="{{inputs.parameters.db_uri}}" \
            --username="{{inputs.parameters.user}}" \
            --password="${HOST_PASSWORD}";


      - name: run-training
        inputs:
          parameters:
            - name: entrypoint
            - name: model_name
              value: 'model'
            - name: shared_rabbit_secret
              value: #@ data.values.shared_rabbit_secret
            - name: shared_rabbit_host
              value: #@ data.values.shared_rabbit_host
        container:
          image: oawofolu/demo-ml-base
          command: [ python ]
          securityContext:
            runAsUser: 0
            fsGroup: 1000
          env:
            - name: rmq_user
              valueFrom:
                secretKeyRef:
                  name: "{{inputs.parameters.shared_rabbit_secret}}"
                  key: username
            - name: rmq_password
              valueFrom:
                secretKeyRef:
                  name: "{{inputs.parameters.shared_rabbit_secret}}"
                  key: password
            - name: rmq_host
              value: "{{inputs.parameters.shared_rabbit_host}}"
          args:
            - "{{inputs.parameters.entrypoint}}"

