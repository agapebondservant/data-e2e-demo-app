apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app-dep
  labels:
    app: demo-app-dep
  namespace: vmware-explore
spec:
  replicas: 1
  selector:
    matchLabels:
     app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
    spec:
      imagePullSecrets:
        - name: docker-secret
      initContainers:
      - name: dir-creator
        image: "bitnami/minideb:latest"
        imagePullPolicy: Always
        command:
          - /bin/sh
          - -cx
          - |
            mkdir -p /opt/data
            touch /opt/data/db
            chmod 777 /opt/data/db
            chown -R 1001:1001 /opt/data
        volumeMounts:
          - name: app-vol
            mountPath: /opt/data
      containers:
      - name: demo-app
        image: oawofolu/demo-app-anomaly #irisdev21/demo-app:2
        ports:
          - containerPort: 8090
        env:
          - name: spring.datasource.url
            value: jdbc:h2:file:./opt/data/db;DB_CLOSE_ON_EXIT=TRUE
          - name: spring.rabbitmq.host
            value: rmqanomaly.anomaly-ns.svc.cluster.local # operator-cluster.staging-managed-ds.cloud.vmware.com
          - name: spring.rabbitmq.ssl.enabled
            value: "false"
          - name: spring.rabbitmq.password
            value: vmware
          - name: spring.rabbitmq.username
            value: vmware
          - name: gemfire.url
            value: http://gfanomaly-locator.tanzudatatap.com/geode-mgmt/v1/management/commands
        volumeMounts:
        - name: app-vol
          mountPath: /opt/data
      volumes:
      - name: app-vol
        persistentVolumeClaim:
          claimName: demo-app-pvc